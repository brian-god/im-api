// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: group/v2/group.proto

package v2

import (
	v2 "github.com/brian-god/xy-apis/api/common/model/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupAddMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleLevel int32  `protobuf:"varint,2,opt,name=roleLevel,proto3" json:"roleLevel,omitempty"`
}

func (x *GroupAddMemberInfo) Reset() {
	*x = GroupAddMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAddMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAddMemberInfo) ProtoMessage() {}

func (x *GroupAddMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAddMemberInfo.ProtoReflect.Descriptor instead.
func (*GroupAddMemberInfo) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{0}
}

func (x *GroupAddMemberInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GroupAddMemberInfo) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberList   []*GroupAddMemberInfo `protobuf:"bytes,1,rep,name=memberList,proto3" json:"memberList,omitempty"`
	OwnerUserID  string                `protobuf:"bytes,2,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	GroupType    int32                 `protobuf:"varint,3,opt,name=groupType,proto3" json:"groupType,omitempty"`
	GroupName    string                `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Notification string                `protobuf:"bytes,5,opt,name=notification,proto3" json:"notification,omitempty"`
	Introduction string                `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"`
	FaceURL      string                `protobuf:"bytes,7,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Ex           string                `protobuf:"bytes,8,opt,name=ex,proto3" json:"ex,omitempty"`
	OperationID  string                `protobuf:"bytes,9,opt,name=operationID,proto3" json:"operationID,omitempty"`
	GroupID      string                `protobuf:"bytes,10,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OpUserID     string                `protobuf:"bytes,11,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupReq) GetMemberList() []*GroupAddMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *CreateGroupReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *CreateGroupReq) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *CreateGroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateGroupReq) GetNotification() string {
	if x != nil {
		return x.Notification
	}
	return ""
}

func (x *CreateGroupReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateGroupReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CreateGroupReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *CreateGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *CreateGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type CreateGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.GroupInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateGroupReply) Reset() {
	*x = CreateGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReply) ProtoMessage() {}

func (x *CreateGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReply.ProtoReflect.Descriptor instead.
func (*CreateGroupReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGroupReply) GetData() *v2.GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID           string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupName         string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Notification      string `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`
	Introduction      string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`
	FaceURL           string `protobuf:"bytes,5,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Ex                string `protobuf:"bytes,6,opt,name=ex,proto3" json:"ex,omitempty"`
	OperationID       string `protobuf:"bytes,7,opt,name=operationID,proto3" json:"operationID,omitempty"`
	NeedVerification  int32  `protobuf:"varint,8,opt,name=needVerification,proto3" json:"needVerification,omitempty"`
	LookMemberInfo    int32  `protobuf:"varint,9,opt,name=lookMemberInfo,proto3" json:"lookMemberInfo,omitempty"`
	ApplyMemberFriend int32  `protobuf:"varint,10,opt,name=applyMemberFriend,proto3" json:"applyMemberFriend,omitempty"`
	OpUserID          string `protobuf:"bytes,11,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *SetGroupInfoReq) Reset() {
	*x = SetGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupInfoReq) ProtoMessage() {}

func (x *SetGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupInfoReq.ProtoReflect.Descriptor instead.
func (*SetGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{3}
}

func (x *SetGroupInfoReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupInfoReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SetGroupInfoReq) GetNotification() string {
	if x != nil {
		return x.Notification
	}
	return ""
}

func (x *SetGroupInfoReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *SetGroupInfoReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *SetGroupInfoReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *SetGroupInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetGroupInfoReq) GetNeedVerification() int32 {
	if x != nil {
		return x.NeedVerification
	}
	return 0
}

func (x *SetGroupInfoReq) GetLookMemberInfo() int32 {
	if x != nil {
		return x.LookMemberInfo
	}
	return 0
}

func (x *SetGroupInfoReq) GetApplyMemberFriend() int32 {
	if x != nil {
		return x.ApplyMemberFriend
	}
	return 0
}

func (x *SetGroupInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type JoinGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID        string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ReqMessage     string `protobuf:"bytes,2,opt,name=reqMessage,proto3" json:"reqMessage,omitempty"`
	OperationID    string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
	JoinSource     int32  `protobuf:"varint,4,opt,name=joinSource,proto3" json:"joinSource,omitempty"`
	JinviterUserID string `protobuf:"bytes,5,opt,name=jinviterUserID,proto3" json:"jinviterUserID,omitempty"`
	OpUserID       string `protobuf:"bytes,6,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *JoinGroupReq) Reset() {
	*x = JoinGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupReq) ProtoMessage() {}

func (x *JoinGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupReq.ProtoReflect.Descriptor instead.
func (*JoinGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{4}
}

func (x *JoinGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *JoinGroupReq) GetReqMessage() string {
	if x != nil {
		return x.ReqMessage
	}
	return ""
}

func (x *JoinGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *JoinGroupReq) GetJoinSource() int32 {
	if x != nil {
		return x.JoinSource
	}
	return 0
}

func (x *JoinGroupReq) GetJinviterUserID() string {
	if x != nil {
		return x.JinviterUserID
	}
	return ""
}

func (x *JoinGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type QuitGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *QuitGroupReq) Reset() {
	*x = QuitGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupReq) ProtoMessage() {}

func (x *QuitGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupReq.ProtoReflect.Descriptor instead.
func (*QuitGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{5}
}

func (x *QuitGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *QuitGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *QuitGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type ApplicationGroupResponseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID      string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	FromUserID   string `protobuf:"bytes,3,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	HandledMsg   string `protobuf:"bytes,4,opt,name=handledMsg,proto3" json:"handledMsg,omitempty"`
	HandleResult int32  `protobuf:"varint,5,opt,name=handleResult,proto3" json:"handleResult,omitempty"`
	OpUserID     string `protobuf:"bytes,6,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *ApplicationGroupResponseReq) Reset() {
	*x = ApplicationGroupResponseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationGroupResponseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationGroupResponseReq) ProtoMessage() {}

func (x *ApplicationGroupResponseReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationGroupResponseReq.ProtoReflect.Descriptor instead.
func (*ApplicationGroupResponseReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationGroupResponseReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ApplicationGroupResponseReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ApplicationGroupResponseReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *ApplicationGroupResponseReq) GetHandledMsg() string {
	if x != nil {
		return x.HandledMsg
	}
	return ""
}

func (x *ApplicationGroupResponseReq) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *ApplicationGroupResponseReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type TransferGroupOwnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID        string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OldOwnerUserID string `protobuf:"bytes,2,opt,name=oldOwnerUserID,proto3" json:"oldOwnerUserID,omitempty"`
	NewOwnerUserID string `protobuf:"bytes,3,opt,name=newOwnerUserID,proto3" json:"newOwnerUserID,omitempty"`
	OperationID    string `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID       string `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *TransferGroupOwnerReq) Reset() {
	*x = TransferGroupOwnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGroupOwnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGroupOwnerReq) ProtoMessage() {}

func (x *TransferGroupOwnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGroupOwnerReq.ProtoReflect.Descriptor instead.
func (*TransferGroupOwnerReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{7}
}

func (x *TransferGroupOwnerReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOldOwnerUserID() string {
	if x != nil {
		return x.OldOwnerUserID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetNewOwnerUserID() string {
	if x != nil {
		return x.NewOwnerUserID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupApplicationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	FromUserID  string `protobuf:"bytes,2,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupApplicationListReq) Reset() {
	*x = GetGroupApplicationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupApplicationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplicationListReq) ProtoMessage() {}

func (x *GetGroupApplicationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplicationListReq.ProtoReflect.Descriptor instead.
func (*GetGroupApplicationListReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupApplicationListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupApplicationListReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *GetGroupApplicationListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupApplicationListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.GroupRequest `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGroupApplicationListReply) Reset() {
	*x = GetGroupApplicationListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupApplicationListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplicationListReply) ProtoMessage() {}

func (x *GetGroupApplicationListReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplicationListReply.ProtoReflect.Descriptor instead.
func (*GetGroupApplicationListReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{9}
}

func (x *GetGroupApplicationListReply) GetData() []*v2.GroupRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGroupApplicationByUserAndGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetGroupApplicationByUserAndGroupReq) Reset() {
	*x = GetGroupApplicationByUserAndGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupApplicationByUserAndGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplicationByUserAndGroupReq) ProtoMessage() {}

func (x *GetGroupApplicationByUserAndGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplicationByUserAndGroupReq.ProtoReflect.Descriptor instead.
func (*GetGroupApplicationByUserAndGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{10}
}

func (x *GetGroupApplicationByUserAndGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupApplicationByUserAndGroupReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetGroupApplicationByUserAndGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserReqGroupApplicationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetUserReqGroupApplicationListReq) Reset() {
	*x = GetUserReqGroupApplicationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReqGroupApplicationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReqGroupApplicationListReq) ProtoMessage() {}

func (x *GetUserReqGroupApplicationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReqGroupApplicationListReq.ProtoReflect.Descriptor instead.
func (*GetUserReqGroupApplicationListReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserReqGroupApplicationListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserReqGroupApplicationListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserReqGroupApplicationListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIDList []string `protobuf:"bytes,1,rep,name=groupIDList,proto3" json:"groupIDList,omitempty"`
	OperationID string   `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string   `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupInfoReq) Reset() {
	*x = GetGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoReq) ProtoMessage() {}

func (x *GetGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupInfoReq) GetGroupIDList() []string {
	if x != nil {
		return x.GroupIDList
	}
	return nil
}

func (x *GetGroupInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupInfoReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.GroupInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGroupInfoReplay) Reset() {
	*x = GetGroupInfoReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoReplay) ProtoMessage() {}

func (x *GetGroupInfoReplay) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoReplay.ProtoReflect.Descriptor instead.
func (*GetGroupInfoReplay) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupInfoReplay) GetData() []*v2.GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGroupInfoByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupInfoByCodeReq) Reset() {
	*x = GetGroupInfoByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoByCodeReq) ProtoMessage() {}

func (x *GetGroupInfoByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoByCodeReq.ProtoReflect.Descriptor instead.
func (*GetGroupInfoByCodeReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupInfoByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetGroupInfoByCodeReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupInfoByCodeReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupInfoByCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.GroupInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGroupInfoByCodeReply) Reset() {
	*x = GetGroupInfoByCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoByCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoByCodeReply) ProtoMessage() {}

func (x *GetGroupInfoByCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoByCodeReply.ProtoReflect.Descriptor instead.
func (*GetGroupInfoByCodeReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{15}
}

func (x *GetGroupInfoByCodeReply) GetData() *v2.GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type KickGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID          string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	KickedUserIDList []string `protobuf:"bytes,2,rep,name=kickedUserIDList,proto3" json:"kickedUserIDList,omitempty"`
	Reason           string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	OperationID      string   `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID         string   `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *KickGroupMemberReq) Reset() {
	*x = KickGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberReq) ProtoMessage() {}

func (x *KickGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberReq.ProtoReflect.Descriptor instead.
func (*KickGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{16}
}

func (x *KickGroupMemberReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *KickGroupMemberReq) GetKickedUserIDList() []string {
	if x != nil {
		return x.KickedUserIDList
	}
	return nil
}

func (x *KickGroupMemberReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *KickGroupMemberReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *KickGroupMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type KickGroupMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.UserIDResult `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *KickGroupMemberReply) Reset() {
	*x = KickGroupMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberReply) ProtoMessage() {}

func (x *KickGroupMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberReply.ProtoReflect.Descriptor instead.
func (*KickGroupMemberReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{17}
}

func (x *KickGroupMemberReply) GetData() []*v2.UserIDResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Filter      int32  `protobuf:"varint,2,opt,name=filter,proto3" json:"filter,omitempty"`
	NextSeq     int32  `protobuf:"varint,3,opt,name=nextSeq,proto3" json:"nextSeq,omitempty"`
	ShowNumber  int32  `protobuf:"varint,4,opt,name=showNumber,proto3" json:"showNumber,omitempty"`
	PageNumber  int32  `protobuf:"varint,5,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	OperationID string `protobuf:"bytes,6,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,7,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupMemberListReq) Reset() {
	*x = GetGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReq) ProtoMessage() {}

func (x *GetGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{18}
}

func (x *GetGroupMemberListReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupMemberListReq) GetFilter() int32 {
	if x != nil {
		return x.Filter
	}
	return 0
}

func (x *GetGroupMemberListReq) GetNextSeq() int32 {
	if x != nil {
		return x.NextSeq
	}
	return 0
}

func (x *GetGroupMemberListReq) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetGroupMemberListReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetGroupMemberListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupMemberListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupMemberListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextSeq int32                     `protobuf:"varint,1,opt,name=nextSeq,proto3" json:"nextSeq,omitempty"`
	Data    []*v2.GroupMemberFullInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGroupMemberListReply) Reset() {
	*x = GetGroupMemberListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReply) ProtoMessage() {}

func (x *GetGroupMemberListReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReply.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupMemberListReply) GetNextSeq() int32 {
	if x != nil {
		return x.NextSeq
	}
	return 0
}

func (x *GetGroupMemberListReply) GetData() []*v2.GroupMemberFullInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGroupAllMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	Offset      int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Count       int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	OpUserID    string `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupAllMemberReq) Reset() {
	*x = GetGroupAllMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberReq) ProtoMessage() {}

func (x *GetGroupAllMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberReq.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{20}
}

func (x *GetGroupAllMemberReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupAllMemberReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupAllMemberReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupAllMemberReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetGroupAllMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupMembersInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	MemberList  []string `protobuf:"bytes,2,rep,name=memberList,proto3" json:"memberList,omitempty"`
	OperationID string   `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID    string   `protobuf:"bytes,4,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupMembersInfoReq) Reset() {
	*x = GetGroupMembersInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersInfoReq) ProtoMessage() {}

func (x *GetGroupMembersInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupMembersInfoReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{21}
}

func (x *GetGroupMembersInfoReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupMembersInfoReq) GetMemberList() []string {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GetGroupMembersInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupMembersInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupAllMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.GroupMemberFullInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGroupAllMemberReply) Reset() {
	*x = GetGroupAllMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberReply) ProtoMessage() {}

func (x *GetGroupAllMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberReply.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{22}
}

func (x *GetGroupAllMemberReply) GetData() []*v2.GroupMemberFullInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type InviteUserToGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID           string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	InvitedUserIDList []string `protobuf:"bytes,2,rep,name=invitedUserIDList,proto3" json:"invitedUserIDList,omitempty"`
	Reason            string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	OperationID       string   `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
	OpUserID          string   `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *InviteUserToGroupReq) Reset() {
	*x = InviteUserToGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupReq) ProtoMessage() {}

func (x *InviteUserToGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupReq.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{23}
}

func (x *InviteUserToGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *InviteUserToGroupReq) GetInvitedUserIDList() []string {
	if x != nil {
		return x.InvitedUserIDList
	}
	return nil
}

func (x *InviteUserToGroupReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *InviteUserToGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *InviteUserToGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type InviteUserToGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.UserIDResult `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *InviteUserToGroupReply) Reset() {
	*x = InviteUserToGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupReply) ProtoMessage() {}

func (x *InviteUserToGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupReply.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{24}
}

func (x *InviteUserToGroupReply) GetData() []*v2.UserIDResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetJoinedGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	FromUserID string `protobuf:"bytes,2,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	OpUserID   string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetJoinedGroupListReq) Reset() {
	*x = GetJoinedGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListReq) ProtoMessage() {}

func (x *GetJoinedGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListReq.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{25}
}

func (x *GetJoinedGroupListReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *GetJoinedGroupListReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *GetJoinedGroupListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetJoinedGroupListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*v2.GroupInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetJoinedGroupListReply) Reset() {
	*x = GetJoinedGroupListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListReply) ProtoMessage() {}

func (x *GetJoinedGroupListReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListReply.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{26}
}

func (x *GetJoinedGroupListReply) GetData() []*v2.GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DismissGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID    string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperatorID string `protobuf:"bytes,2,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	OpUserID   string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *DismissGroupReq) Reset() {
	*x = DismissGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupReq) ProtoMessage() {}

func (x *DismissGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupReq.ProtoReflect.Descriptor instead.
func (*DismissGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{27}
}

func (x *DismissGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *DismissGroupReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *DismissGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type MuteGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID   string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID      string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID       string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	MutedSeconds uint32 `protobuf:"varint,4,opt,name=mutedSeconds,proto3" json:"mutedSeconds,omitempty"`
	OpUserID     string `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *MuteGroupMemberReq) Reset() {
	*x = MuteGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupMemberReq) ProtoMessage() {}

func (x *MuteGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupMemberReq.ProtoReflect.Descriptor instead.
func (*MuteGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{28}
}

func (x *MuteGroupMemberReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *MuteGroupMemberReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MuteGroupMemberReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MuteGroupMemberReq) GetMutedSeconds() uint32 {
	if x != nil {
		return x.MutedSeconds
	}
	return 0
}

func (x *MuteGroupMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type CancelMuteGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID    string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID     string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	OpUserID   string `protobuf:"bytes,4,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *CancelMuteGroupMemberReq) Reset() {
	*x = CancelMuteGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupMemberReq) ProtoMessage() {}

func (x *CancelMuteGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupMemberReq.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{29}
}

func (x *CancelMuteGroupMemberReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CancelMuteGroupMemberReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *CancelMuteGroupMemberReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CancelMuteGroupMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type MuteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID    string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OpUserID   string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *MuteGroupReq) Reset() {
	*x = MuteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupReq) ProtoMessage() {}

func (x *MuteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupReq.ProtoReflect.Descriptor instead.
func (*MuteGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{30}
}

func (x *MuteGroupReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *MuteGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MuteGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type CancelMuteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID    string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OpUserID   string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *CancelMuteGroupReq) Reset() {
	*x = CancelMuteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupReq) ProtoMessage() {}

func (x *CancelMuteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupReq.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{31}
}

func (x *CancelMuteGroupReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CancelMuteGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *CancelMuteGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type SetGroupMemberNicknameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID    string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID     string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname   string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	OpUserID   string `protobuf:"bytes,5,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *SetGroupMemberNicknameReq) Reset() {
	*x = SetGroupMemberNicknameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberNicknameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberNicknameReq) ProtoMessage() {}

func (x *SetGroupMemberNicknameReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberNicknameReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberNicknameReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{32}
}

func (x *SetGroupMemberNicknameReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type SetGroupMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID    string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID       string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID        string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname      string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL       string `protobuf:"bytes,5,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	RoleLevel     int32  `protobuf:"varint,6,opt,name=roleLevel,proto3" json:"roleLevel,omitempty"`
	BackgroundUrl string `protobuf:"bytes,7,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"`
	Ex            string `protobuf:"bytes,8,opt,name=ex,proto3" json:"ex,omitempty"`
	OpUserID      string `protobuf:"bytes,9,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *SetGroupMemberInfoReq) Reset() {
	*x = SetGroupMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberInfoReq) ProtoMessage() {}

func (x *SetGroupMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberInfoReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{33}
}

func (x *SetGroupMemberInfoReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *SetGroupMemberInfoReq) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupAbstractInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	GroupID    string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OpUserID   string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
}

func (x *GetGroupAbstractInfoReq) Reset() {
	*x = GetGroupAbstractInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAbstractInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAbstractInfoReq) ProtoMessage() {}

func (x *GetGroupAbstractInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAbstractInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupAbstractInfoReq) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{34}
}

func (x *GetGroupAbstractInfoReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *GetGroupAbstractInfoReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupAbstractInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetGroupAbstractInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMemberNumber   int32  `protobuf:"varint,1,opt,name=groupMemberNumber,proto3" json:"groupMemberNumber,omitempty"`
	GroupMemberListHash uint64 `protobuf:"varint,2,opt,name=groupMemberListHash,proto3" json:"groupMemberListHash,omitempty"`
}

func (x *GetGroupAbstractInfoReply) Reset() {
	*x = GetGroupAbstractInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_v2_group_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAbstractInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAbstractInfoReply) ProtoMessage() {}

func (x *GetGroupAbstractInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_group_v2_group_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAbstractInfoReply.ProtoReflect.Descriptor instead.
func (*GetGroupAbstractInfoReply) Descriptor() ([]byte, []int) {
	return file_group_v2_group_proto_rawDescGZIP(), []int{35}
}

func (x *GetGroupAbstractInfoReply) GetGroupMemberNumber() int32 {
	if x != nil {
		return x.GroupMemberNumber
	}
	return 0
}

func (x *GetGroupAbstractInfoReply) GetGroupMemberListHash() uint64 {
	if x != nil {
		return x.GroupMemberListHash
	}
	return 0
}

var File_group_v2_group_proto protoreflect.FileDescriptor

var file_group_v2_group_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a,
	0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xfa, 0x02, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xfb, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xce, 0x01,
	0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f,
	0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6a, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x66,
	0x0a, 0x0c, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6c, 0x64, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x6c, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x79, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x71,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x14, 0x4b, 0x69, 0x63, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x71, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x71,
	0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9c,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x90, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x4f, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa6, 0x01,
	0x0a, 0x12, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x75,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x64, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x90, 0x02, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6f,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x11,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x32, 0xd0, 0x11, 0x0a,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x51,
	0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x18,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x73,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x76, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x83, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7d, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x60, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x0f,
	0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x4b,
	0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x60, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a,
	0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x60, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x57, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x4d,
	0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x3e, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x50,
	0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72,
	0x69, 0x61, 0x6e, 0x2d, 0x67, 0x6f, 0x64, 0x2f, 0x78, 0x79, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_group_v2_group_proto_rawDescOnce sync.Once
	file_group_v2_group_proto_rawDescData = file_group_v2_group_proto_rawDesc
)

func file_group_v2_group_proto_rawDescGZIP() []byte {
	file_group_v2_group_proto_rawDescOnce.Do(func() {
		file_group_v2_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_group_v2_group_proto_rawDescData)
	})
	return file_group_v2_group_proto_rawDescData
}

var file_group_v2_group_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_group_v2_group_proto_goTypes = []interface{}{
	(*GroupAddMemberInfo)(nil),                   // 0: api.group.v2.GroupAddMemberInfo
	(*CreateGroupReq)(nil),                       // 1: api.group.v2.CreateGroupReq
	(*CreateGroupReply)(nil),                     // 2: api.group.v2.CreateGroupReply
	(*SetGroupInfoReq)(nil),                      // 3: api.group.v2.SetGroupInfoReq
	(*JoinGroupReq)(nil),                         // 4: api.group.v2.JoinGroupReq
	(*QuitGroupReq)(nil),                         // 5: api.group.v2.QuitGroupReq
	(*ApplicationGroupResponseReq)(nil),          // 6: api.group.v2.ApplicationGroupResponseReq
	(*TransferGroupOwnerReq)(nil),                // 7: api.group.v2.TransferGroupOwnerReq
	(*GetGroupApplicationListReq)(nil),           // 8: api.group.v2.GetGroupApplicationListReq
	(*GetGroupApplicationListReply)(nil),         // 9: api.group.v2.GetGroupApplicationListReply
	(*GetGroupApplicationByUserAndGroupReq)(nil), // 10: api.group.v2.GetGroupApplicationByUserAndGroupReq
	(*GetUserReqGroupApplicationListReq)(nil),    // 11: api.group.v2.GetUserReqGroupApplicationListReq
	(*GetGroupInfoReq)(nil),                      // 12: api.group.v2.GetGroupInfoReq
	(*GetGroupInfoReplay)(nil),                   // 13: api.group.v2.GetGroupInfoReplay
	(*GetGroupInfoByCodeReq)(nil),                // 14: api.group.v2.GetGroupInfoByCodeReq
	(*GetGroupInfoByCodeReply)(nil),              // 15: api.group.v2.GetGroupInfoByCodeReply
	(*KickGroupMemberReq)(nil),                   // 16: api.group.v2.KickGroupMemberReq
	(*KickGroupMemberReply)(nil),                 // 17: api.group.v2.KickGroupMemberReply
	(*GetGroupMemberListReq)(nil),                // 18: api.group.v2.GetGroupMemberListReq
	(*GetGroupMemberListReply)(nil),              // 19: api.group.v2.GetGroupMemberListReply
	(*GetGroupAllMemberReq)(nil),                 // 20: api.group.v2.GetGroupAllMemberReq
	(*GetGroupMembersInfoReq)(nil),               // 21: api.group.v2.GetGroupMembersInfoReq
	(*GetGroupAllMemberReply)(nil),               // 22: api.group.v2.GetGroupAllMemberReply
	(*InviteUserToGroupReq)(nil),                 // 23: api.group.v2.InviteUserToGroupReq
	(*InviteUserToGroupReply)(nil),               // 24: api.group.v2.InviteUserToGroupReply
	(*GetJoinedGroupListReq)(nil),                // 25: api.group.v2.GetJoinedGroupListReq
	(*GetJoinedGroupListReply)(nil),              // 26: api.group.v2.GetJoinedGroupListReply
	(*DismissGroupReq)(nil),                      // 27: api.group.v2.DismissGroupReq
	(*MuteGroupMemberReq)(nil),                   // 28: api.group.v2.MuteGroupMemberReq
	(*CancelMuteGroupMemberReq)(nil),             // 29: api.group.v2.CancelMuteGroupMemberReq
	(*MuteGroupReq)(nil),                         // 30: api.group.v2.MuteGroupReq
	(*CancelMuteGroupReq)(nil),                   // 31: api.group.v2.CancelMuteGroupReq
	(*SetGroupMemberNicknameReq)(nil),            // 32: api.group.v2.SetGroupMemberNicknameReq
	(*SetGroupMemberInfoReq)(nil),                // 33: api.group.v2.SetGroupMemberInfoReq
	(*GetGroupAbstractInfoReq)(nil),              // 34: api.group.v2.GetGroupAbstractInfoReq
	(*GetGroupAbstractInfoReply)(nil),            // 35: api.group.v2.GetGroupAbstractInfoReply
	(*v2.GroupInfo)(nil),                         // 36: api.common.model.v2.GroupInfo
	(*v2.GroupRequest)(nil),                      // 37: api.common.model.v2.GroupRequest
	(*v2.UserIDResult)(nil),                      // 38: api.common.model.v2.UserIDResult
	(*v2.GroupMemberFullInfo)(nil),               // 39: api.common.model.v2.GroupMemberFullInfo
	(*emptypb.Empty)(nil),                        // 40: google.protobuf.Empty
}
var file_group_v2_group_proto_depIdxs = []int32{
	0,  // 0: api.group.v2.CreateGroupReq.memberList:type_name -> api.group.v2.GroupAddMemberInfo
	36, // 1: api.group.v2.CreateGroupReply.data:type_name -> api.common.model.v2.GroupInfo
	37, // 2: api.group.v2.GetGroupApplicationListReply.data:type_name -> api.common.model.v2.GroupRequest
	36, // 3: api.group.v2.GetGroupInfoReplay.data:type_name -> api.common.model.v2.GroupInfo
	36, // 4: api.group.v2.GetGroupInfoByCodeReply.data:type_name -> api.common.model.v2.GroupInfo
	38, // 5: api.group.v2.KickGroupMemberReply.data:type_name -> api.common.model.v2.UserIDResult
	39, // 6: api.group.v2.GetGroupMemberListReply.data:type_name -> api.common.model.v2.GroupMemberFullInfo
	39, // 7: api.group.v2.GetGroupAllMemberReply.data:type_name -> api.common.model.v2.GroupMemberFullInfo
	38, // 8: api.group.v2.InviteUserToGroupReply.data:type_name -> api.common.model.v2.UserIDResult
	36, // 9: api.group.v2.GetJoinedGroupListReply.data:type_name -> api.common.model.v2.GroupInfo
	1,  // 10: api.group.v2.Group.CreateGroup:input_type -> api.group.v2.CreateGroupReq
	3,  // 11: api.group.v2.Group.SetGroupInfo:input_type -> api.group.v2.SetGroupInfoReq
	4,  // 12: api.group.v2.Group.JoinGroup:input_type -> api.group.v2.JoinGroupReq
	5,  // 13: api.group.v2.Group.QuitGroup:input_type -> api.group.v2.QuitGroupReq
	6,  // 14: api.group.v2.Group.ApplicationGroupResponse:input_type -> api.group.v2.ApplicationGroupResponseReq
	7,  // 15: api.group.v2.Group.TransferGroupOwner:input_type -> api.group.v2.TransferGroupOwnerReq
	8,  // 16: api.group.v2.Group.GetRecvGroupApplicationList:input_type -> api.group.v2.GetGroupApplicationListReq
	10, // 17: api.group.v2.Group.GetGroupApplicationByUserAndGroup:input_type -> api.group.v2.GetGroupApplicationByUserAndGroupReq
	11, // 18: api.group.v2.Group.GetUserReqGroupApplicationList:input_type -> api.group.v2.GetUserReqGroupApplicationListReq
	12, // 19: api.group.v2.Group.GetGroupsInfo:input_type -> api.group.v2.GetGroupInfoReq
	14, // 20: api.group.v2.Group.GetGroupInfoByCode:input_type -> api.group.v2.GetGroupInfoByCodeReq
	16, // 21: api.group.v2.Group.KickGroupMember:input_type -> api.group.v2.KickGroupMemberReq
	18, // 22: api.group.v2.Group.GetGroupMemberList:input_type -> api.group.v2.GetGroupMemberListReq
	20, // 23: api.group.v2.Group.GetGroupAllMemberList:input_type -> api.group.v2.GetGroupAllMemberReq
	21, // 24: api.group.v2.Group.GetGroupMembersInfo:input_type -> api.group.v2.GetGroupMembersInfoReq
	23, // 25: api.group.v2.Group.InviteUserToGroup:input_type -> api.group.v2.InviteUserToGroupReq
	25, // 26: api.group.v2.Group.GetJoinedGroupList:input_type -> api.group.v2.GetJoinedGroupListReq
	27, // 27: api.group.v2.Group.DismissGroup:input_type -> api.group.v2.DismissGroupReq
	28, // 28: api.group.v2.Group.MuteGroupMember:input_type -> api.group.v2.MuteGroupMemberReq
	29, // 29: api.group.v2.Group.CancelMuteGroupMember:input_type -> api.group.v2.CancelMuteGroupMemberReq
	30, // 30: api.group.v2.Group.MuteGroup:input_type -> api.group.v2.MuteGroupReq
	31, // 31: api.group.v2.Group.CancelMuteGroup:input_type -> api.group.v2.CancelMuteGroupReq
	32, // 32: api.group.v2.Group.SetGroupMemberNickname:input_type -> api.group.v2.SetGroupMemberNicknameReq
	33, // 33: api.group.v2.Group.SetGroupMemberInfo:input_type -> api.group.v2.SetGroupMemberInfoReq
	34, // 34: api.group.v2.Group.GetGroupAbstractInfo:input_type -> api.group.v2.GetGroupAbstractInfoReq
	2,  // 35: api.group.v2.Group.CreateGroup:output_type -> api.group.v2.CreateGroupReply
	40, // 36: api.group.v2.Group.SetGroupInfo:output_type -> google.protobuf.Empty
	40, // 37: api.group.v2.Group.JoinGroup:output_type -> google.protobuf.Empty
	40, // 38: api.group.v2.Group.QuitGroup:output_type -> google.protobuf.Empty
	40, // 39: api.group.v2.Group.ApplicationGroupResponse:output_type -> google.protobuf.Empty
	40, // 40: api.group.v2.Group.TransferGroupOwner:output_type -> google.protobuf.Empty
	9,  // 41: api.group.v2.Group.GetRecvGroupApplicationList:output_type -> api.group.v2.GetGroupApplicationListReply
	9,  // 42: api.group.v2.Group.GetGroupApplicationByUserAndGroup:output_type -> api.group.v2.GetGroupApplicationListReply
	9,  // 43: api.group.v2.Group.GetUserReqGroupApplicationList:output_type -> api.group.v2.GetGroupApplicationListReply
	13, // 44: api.group.v2.Group.GetGroupsInfo:output_type -> api.group.v2.GetGroupInfoReplay
	15, // 45: api.group.v2.Group.GetGroupInfoByCode:output_type -> api.group.v2.GetGroupInfoByCodeReply
	17, // 46: api.group.v2.Group.KickGroupMember:output_type -> api.group.v2.KickGroupMemberReply
	19, // 47: api.group.v2.Group.GetGroupMemberList:output_type -> api.group.v2.GetGroupMemberListReply
	22, // 48: api.group.v2.Group.GetGroupAllMemberList:output_type -> api.group.v2.GetGroupAllMemberReply
	22, // 49: api.group.v2.Group.GetGroupMembersInfo:output_type -> api.group.v2.GetGroupAllMemberReply
	24, // 50: api.group.v2.Group.InviteUserToGroup:output_type -> api.group.v2.InviteUserToGroupReply
	26, // 51: api.group.v2.Group.GetJoinedGroupList:output_type -> api.group.v2.GetJoinedGroupListReply
	40, // 52: api.group.v2.Group.DismissGroup:output_type -> google.protobuf.Empty
	40, // 53: api.group.v2.Group.MuteGroupMember:output_type -> google.protobuf.Empty
	40, // 54: api.group.v2.Group.CancelMuteGroupMember:output_type -> google.protobuf.Empty
	40, // 55: api.group.v2.Group.MuteGroup:output_type -> google.protobuf.Empty
	40, // 56: api.group.v2.Group.CancelMuteGroup:output_type -> google.protobuf.Empty
	40, // 57: api.group.v2.Group.SetGroupMemberNickname:output_type -> google.protobuf.Empty
	40, // 58: api.group.v2.Group.SetGroupMemberInfo:output_type -> google.protobuf.Empty
	35, // 59: api.group.v2.Group.GetGroupAbstractInfo:output_type -> api.group.v2.GetGroupAbstractInfoReply
	35, // [35:60] is the sub-list for method output_type
	10, // [10:35] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_group_v2_group_proto_init() }
func file_group_v2_group_proto_init() {
	if File_group_v2_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_group_v2_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAddMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationGroupResponseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGroupOwnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupApplicationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupApplicationListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupApplicationByUserAndGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReqGroupApplicationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoByCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberNicknameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAbstractInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_v2_group_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAbstractInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_group_v2_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_group_v2_group_proto_goTypes,
		DependencyIndexes: file_group_v2_group_proto_depIdxs,
		MessageInfos:      file_group_v2_group_proto_msgTypes,
	}.Build()
	File_group_v2_group_proto = out.File
	file_group_v2_group_proto_rawDesc = nil
	file_group_v2_group_proto_goTypes = nil
	file_group_v2_group_proto_depIdxs = nil
}
